eigenlayer_repo: "https://github.com/Layr-Labs/incredible-squaring-avs.git"
eigenlayer_ref: "master"
eigenlayer_path: "contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts"

deployments:
  # - name: EigenLayer
  #   repo: "https://github.com/Layr-Labs/incredible-squaring-avs.git"
  #   ref: "master"
  #   contracts_path: "contracts/lib/eigenlayer-middleware/lib/eigenlayer-contracts"
  #   script: script/deploy/devnet/M2_Deploy_From_Scratch.s.sol:Deployer_M2
  #   extra_args: --sig 'run(string memory configFile)' -- deploy_from_scratch.config.json
  #   input:
  #     script/output/3151908: eigenlayer_addresses
  #   output:
  #     avs_addresses: "script/output/3151908/credible_squaring_avs_deployment_output.json"

  - name: incredible-squaring
    repo: "https://github.com/Layr-Labs/incredible-squaring-avs.git"
    ref: "master"
    contracts_path: "contracts"
    script: script/IncredibleSquaringDeployer.s.sol
    # NOTE: input/output key-value order is destination-source
    input:
      script/output/3151908: eigenlayer_addresses
    output:
      avs_addresses: "script/output/3151908/credible_squaring_avs_deployment_output.json"

keystores:
  - name: "operator1_bls_keystore"
    type: "bls"
  - name: "operator1_ecdsa_keystore"
    type: "ecdsa"

# TODO: document this
artifacts:
  aggregator-config:
    files:
      aggregator-config.yaml: |
        # 'production' only prints info and above. 'development' also prints debug
        environment: production
        eth_rpc_url: {{.HttpRpcUrl}}
        eth_ws_url: {{.WsUrl}}
        # address which the aggregator listens on for operator signed messages
        aggregator_server_ip_port_address: 0.0.0.0:8090

  operator-config:
    # TODO: maybe add this eagerly
    additional_data:
      operator1_ecdsa_keystore:
        OperatorAddress: ".address"
      avs_addresses:
        AvsRegistryCoordinatorAddress: ".addresses.registryCoordinator"
        OperatorStateRetrieverAddress: ".addresses.operatorStateRetriever"
        TokenStrategyAddress: ".addresses.erc20MockStrategy"
    files:
      operator-config.yaml: |
        production: False
        operator_address: {{.OperatorAddress}}
        avs_registry_coordinator_address: {{.AvsRegistryCoordinatorAddress}}
        operator_state_retriever_address: {{.OperatorStateRetrieverAddress}}
        eth_rpc_url: {{.HttpRpcUrl}}
        eth_ws_url: {{.WsUrl}}
        ecdsa_private_key_store_path: /usr/src/app/config-files/1.ecdsa.key.json
        bls_private_key_store_path: /usr/src/app/config-files/1.bls.key.json
        aggregator_server_ip_port_address: {{.Service_aggregator}}:8090
        eigen_metrics_ip_port_address: "10"
        enable_metrics: False
        node_api_ip_port_address: "12"
        enable_node_api: False
        register_operator_on_startup: True
        token_strategy_addr: {{.TokenStrategyAddress}}

services:
  - name: "aggregator"
    image: "ghcr.io/layr-labs/incredible-squaring/aggregator/cmd/main.go:latest"
    ports:
      rpc:
        number: 8090
        transport_protocol: "TCP"
        application_protocol: "http"
        wait: "10s"
    address: "0xa0Ee7A142d267C1f36714E4a8F75612F20a79720"
    input:
      /usr/src/app/config-files/:
        - aggregator-config
        - avs_addresses # TODO: this comes from hardcoded AVS deployment output
    cmd:
      - "--config"
      - "/usr/src/app/config-files/aggregator-config.yaml"
      - "--ecdsa-private-key"
      - "0x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6"
      - "--credible-squaring-deployment"
      - "/usr/src/app/config-files/credible_squaring_avs_deployment_output.json"

  - name: "operator1"
    image: "ghcr.io/layr-labs/incredible-squaring/operator/cmd/main.go:latest"
    input:
      /usr/src/app/config-files/:
        - operator-config
        - operator1_bls_keystore
        - operator1_ecdsa_keystore
    env:
      OPERATOR_ECDSA_KEY_PASSWORD: $operator1_ecdsa_keystore_password
      OPERATOR_BLS_KEY_PASSWORD: $operator1_bls_keystore_password
    cmd: ["--config", "/usr/src/app/config-files/operator-config.yaml"]

ethereum_params:
  participants:
    - el_type: reth
      cl_type: teku
  additional_services:
    - blockscout
    - dora
