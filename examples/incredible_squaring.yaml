# Example devnet config file for the incredible-squaring-avs example
deployments:
  - type: EigenLayer
    # This commit corresponds to the incredible-squaring commit below
    ref: "f13e1c21c5c4a90f1550fb80c132428bbacd731c"
    strategies: [MockEigen]
    operators:
      - name: operator1
        keystore: operator1_ecdsa_keystore
        strategies:
          MockEigen: 100000000000000000

  - name: incredible-squaring
    repo: "https://github.com/Layr-Labs/incredible-squaring-avs.git"
    ref: "d05341ef33e5853fd3ecef831ae4dcfbf29c5299"
    contracts_path: "contracts"
    script: script/IncredibleSquaringDeployer.s.sol
    input:
      script/output/3151908: eigenlayer_addresses
    output:
      avs_addresses: "script/output/3151908/credible_squaring_avs_deployment_output.json"

services:
  - name: "aggregator"
    image: "ghcr.io/layr-labs/incredible-squaring/aggregator/cmd/main.go:latest"
    ports:
      rpc:
        number: 8090
        transport_protocol: "TCP"
        application_protocol: "http"
        wait: "10s"
    address: "0xa0Ee7A142d267C1f36714E4a8F75612F20a79720"
    input:
      /usr/src/app/config-files/:
        - aggregator-config
        - avs_addresses
    cmd:
      - "--config"
      - "/usr/src/app/config-files/aggregator-config.yaml"
      - "--ecdsa-private-key"
      - "0x2a871d0798f97d79848a013d4936a73bf4cc922c825d33c1cf7073dff6d409c6"
      - "--credible-squaring-deployment"
      - "/usr/src/app/config-files/credible_squaring_avs_deployment_output.json"

  - name: "operator1"
    image: "ghcr.io/layr-labs/incredible-squaring/operator/cmd/main.go:latest"
    input:
      /usr/src/app/config-files/:
        - operator-config
        - operator1_bls_keystore
        - operator1_ecdsa_keystore
    env:
      OPERATOR_ECDSA_KEY_PASSWORD: $keystores.operator1_ecdsa_keystore.password
      OPERATOR_BLS_KEY_PASSWORD: $keystores.operator1_bls_keystore.password
    cmd: ["--config", "/usr/src/app/config-files/operator-config.yaml"]

keystores:
  - name: "operator1_bls_keystore"
    type: "bls"
  - name: "operator1_ecdsa_keystore"
    type: "ecdsa"

artifacts:
  eigenlayer-deployment-input:
    files:
      deploy_from_scratch.config.json: |
        {
          "maintainer": "example@example.org",
          "multisig_addresses": {
            "operationsMultisig": "{{.deployer_address}}",
            "pauserMultisig": "{{.deployer_address}}",
            "executorMultisig": "{{.deployer_address}}"
          },
          "strategies": [],
          "strategyManager": {
            "init_paused_status": 0,
            "init_withdrawal_delay_blocks": 1
          },
          "eigenPod": {
            "PARTIAL_WITHDRAWAL_FRAUD_PROOF_PERIOD_BLOCKS": 1,
            "MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR": "32000000000"
          },
          "eigenPodManager": {
            "init_paused_status": 30
          },
          "delayedWithdrawalRouter": {
            "init_paused_status": 0,
            "init_withdrawal_delay_blocks": 1
          },
          "slasher": {
            "init_paused_status": 0
          },
          "delegation": {
            "init_paused_status": 0,
            "init_withdrawal_delay_blocks": 1
          },
          "rewardsCoordinator": {
            "init_paused_status": 0,
            "CALCULATION_INTERVAL_SECONDS": 604800,
            "MAX_REWARDS_DURATION": 6048000,
            "MAX_RETROACTIVE_LENGTH": 7776000,
            "MAX_FUTURE_LENGTH": 2592000,
            "GENESIS_REWARDS_TIMESTAMP": 1710979200,
            "rewards_updater_address": "{{.deployer_address}}",
            "activation_delay": 7200,
            "calculation_interval_seconds": 604800,
            "global_operator_commission_bips": 1000
          },
          "ethPOSDepositAddress": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
        }

  aggregator-config:
    files:
      aggregator-config.yaml: |
        # 'production' only prints info and above. 'development' also prints debug
        environment: production
        eth_rpc_url: {{.http_rpc_url}}
        eth_ws_url: {{.ws_rpc_url}}
        # address which the aggregator listens on for operator signed messages
        aggregator_server_ip_port_address: 0.0.0.0:8090

  operator-config:
    # TODO: maybe add this eagerly
    additional_data:
      avs_addresses:
        avs_registry_coordinator_address: ".addresses.registryCoordinator"
        operator_state_retriever_address: ".addresses.operatorStateRetriever"
        token_strategy_addr: ".addresses.erc20MockStrategy"
    files:
      operator-config.yaml: |
        production: False
        operator_address: {{.keystores.operator1_ecdsa_keystore.address}}
        avs_registry_coordinator_address: {{.avs_registry_coordinator_address}}
        operator_state_retriever_address: {{.operator_state_retriever_address}}
        eth_rpc_url: {{.http_rpc_url}}
        eth_ws_url: {{.ws_rpc_url}}
        ecdsa_private_key_store_path: /usr/src/app/config-files/1.ecdsa.key.json
        bls_private_key_store_path: /usr/src/app/config-files/1.bls.key.json
        aggregator_server_ip_port_address: {{.services.aggregator.ip_address}}:8090
        eigen_metrics_ip_port_address: "10"
        enable_metrics: False
        node_api_ip_port_address: "12"
        enable_node_api: False
        register_operator_on_startup: False
        token_strategy_addr: {{.token_strategy_addr}}

ethereum_package:
  participants:
    - el_type: reth
      cl_type: teku
  additional_services:
    - blockscout
    - dora
