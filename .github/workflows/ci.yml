name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '**' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  KURTOSIS_VERSION: 'latest'
  GO_VERSION: '1.22.4'


jobs:
  # Kurtosis package CI
  kurtosis_run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Kurtosis
        uses: ./.github/actions/kurtosis-install
        with:
          version: ${{ env.KURTOSIS_VERSION }}

      - name: Run Package with default args
        run: |
          kurtosis run ./kurtosis_package

  kurtosis_run_examples:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        example:
          - kurtosis_start
          - kurtosis_incredible_squaring
          - kurtosis_hello_world
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Kurtosis
        uses: ./.github/actions/kurtosis-install
        with:
          version: ${{ env.KURTOSIS_VERSION }}

      - name: Run example '${{ matrix.example }}'
        run: make ${{ matrix.example }}

      - name: Check example is still running
        run: make check_devnet

  kurtosis_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Kurtosis
        uses: ./.github/actions/kurtosis-install
        with:
          version: ${{ env.KURTOSIS_VERSION }}

      - name: Kurtosis Lint
        run: make kurtosis_lint

  schema_checker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate all example config files using their own $schema properties
        uses: cardinalby/schema-validator-action@v3
        with:
          file: 'examples/*.yaml'
          schema: 'schema.json'

  # Golang CI
  go_fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Check go files formatting
        # Fails if there are any unformatted files
        run: test -z $(gofmt -l .)

  go_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6

  go_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Kurtosis
        uses: ./.github/actions/kurtosis-install
        with:
          version: ${{ env.KURTOSIS_VERSION }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run go test
        run: make test

  eigenda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Kurtosis
        uses: ./.github/actions/kurtosis-install
        with:
          version: ${{ env.KURTOSIS_VERSION }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install devnet
        run: make install
      
      - name: Checkout EigenDA repo
        uses: actions/checkout@v4
        with:
          repository: Layr-Labs/eigenda
          path: eigenda/
          ref: a294978e346fe9d7ede0f1a57012c36f64f1212a
      
      - name: Download SRS points
        run: |
          cd eigenda/
          mkdir -p resources
          curl --range 0-2097151 -L https://srs-mainnet.s3.amazonaws.com/kzg/g1.point -o resources/g1.point
          curl --range 0-4194303 -L https://srs-mainnet.s3.amazonaws.com/kzg/g2.point -o resources/g2.point
          curl -L https://srs-mainnet.s3.amazonaws.com/kzg/g2.point.powerOf2 -o resources/g2.point.powerOf2

      - name: Run EigenDA example
        run: |
          cp examples/eigenda.yaml eigenda/devnet.yaml
          cd eigenda/
          avs-devnet start
